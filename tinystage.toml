# This is an example configuration file for a fedora-messaging enabled
# application that connects to Tinystage

amqp_url = "amqp://fedoramessages:fedoramessages@tinystage.tinystage.test"
callback = "fedora_messaging.example:printer"


[client_properties]
app = "Tinystage Application"

[exchanges."amq.topic"]
type = "topic"
durable = true
auto_delete = false
arguments = {}

[[bindings]]
exchange = "amq.topic"
routing_keys = ["#"]  # Set this to the specific topics you are interested in.

[log_config]
version = 1
disable_existing_loggers = true

[log_config.formatters.simple]
format = "[%(levelname)s %(name)s] %(message)s"

[log_config.handlers.console]
class = "logging.StreamHandler"
formatter = "simple"
stream = "ext://sys.stdout"

[log_config.loggers.fedora_messaging]
level = "DEBUG"
propagate = false
handlers = ["console"]

[log_config.loggers.fedora_messaging.twisted.protocol]
level = "DEBUG"
propagate = false
handlers = ["console"]

[log_config.loggers.twisted]
level = "DEBUG"
propagate = false
handlers = ["console"]

[log_config.loggers.pika]
level = "INFO"
propagate = false
handlers = ["console"]

# If your consumer sets up a logger, you must add a configuration for it
# here in order for the messages to show up. e.g. if it set up a logger
# called 'example_printer', you could do:
#[log_config.loggers.example_printer]
#level = "INFO"
#propagate = false
#handlers = ["console"]

[log_config.root]
level = "DEBUG"
handlers = ["console"]
